name: OpenWrt-CI

on: 
  release:
    types: [published]
  push:
    branches: 
      - master

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          ln -s /mnt/openwrt/bin ./bin
          mkdir -p ./build_dir
          ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          ln -s /mnt/openwrt/dl ./dl
          ln -s /mnt/openwrt/feeds ./feeds
          ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Clone source code
        env: 
            REPO_URL: https://github.com/coolsnowwolf/lede
            REPO_BRANCH: master
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

      - name: Clone extra luci source code
        run: |
          git clone https://github.com/Kinodi/luci-theme-atmaterial openwrt/package/luci-theme-atmaterial
          git clone https://github.com/jerrykuku/luci-theme-argon openwrt/package/luci-theme-argon
          git clone https://github.com/trojan-gfw/openwrt-trojan.git openwrt/package/openwrt-trojan
          cd openwrt

      - name: Update feeds
        run: |
          cd openwrt 
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
            [ -e files ] && mv files openwrt/files
            cd openwrt
            rm -f ./.config*
            touch ./.config
            #
            # ========================固件定制部分========================
            # 
            # 
            # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
            # 
            # 以下为定制化固件选项和说明:
            #
            #
            # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
            # 
            #          =========================================
            #         |  # 取消编译VMware镜像:                   |
            #         |  cat >> .config <<EOF                   |
            #         |  # CONFIG_VMDK_IMAGES is not set        |
            #         |  EOF                                    |
            #          =========================================
            #
            # 
            # 以下是一些提前准备好的一些插件选项.
            # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
            # 如果不需要代码块里的某一项配置, 只需要删除相应行.
            #
            # 如果需要其他插件, 请按照示例自行添加.
            # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
            # 
            # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
            # 
            # 编译x64固件:
            cat >> .config <<EOF
              CONFIG_TARGET_x86=y
              CONFIG_TARGET_x86_64=y
              CONFIG_TARGET_x86_64_Generic=y
            EOF
            # 固件压缩:
            cat >> .config <<EOF
             CONFIG_TARGET_IMAGES_GZIP=y
            EOF
            # 编译UEFI固件:
            # cat >> .config <<EOF
            # CONFIG_EFI_IMAGES=y
            # EOF
            # IPv6支持:
            cat >> .config <<EOF
              CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
              CONFIG_PACKAGE_ipv6helper=y
            EOF
            # 多文件系统支持:
            # cat >> .config <<EOF
            # CONFIG_PACKAGE_kmod-fs-nfs=y
            # CONFIG_PACKAGE_kmod-fs-nfs-common=y
            # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
            # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
            # CONFIG_PACKAGE_kmod-fs-ntfs=y
            # CONFIG_PACKAGE_kmod-fs-squashfs=y
            # EOF
            # USB3.0支持:
            # cat >> .config <<EOF
            # CONFIG_PACKAGE_kmod-usb-ohci=y
            # CONFIG_PACKAGE_kmod-usb-ohci-pci=y
            # CONFIG_PACKAGE_kmod-usb2=y
            # CONFIG_PACKAGE_kmod-usb2-pci=y
            # CONFIG_PACKAGE_kmod-usb3=y
            # EOF
            # 常用LuCI插件选择:
            cat >> .config <<EOF
            # CONFIG_PACKAGE_luci-ssl-openssl=y
              CONFIG_PACKAGE_luci-app-accesscontrol=m
              CONFIG_PACKAGE_luci-app-adbyby-plus=y
            # CONFIG_PACKAGE_luci-app-aliddns=y
              CONFIG_PACKAGE_luci-app-arpbind=m
              CONFIG_PACKAGE_luci-app-autoreboot=y
              CONFIG_PACKAGE_luci-app-ddns=y
            # CONFIG_PACKAGE_luci-app-fileassistant=y
              CONFIG_PACKAGE_luci-app-filetransfer=y
              CONFIG_PACKAGE_luci-app-firewall=y
              CONFIG_PACKAGE_luci-app-flowoffload=y
            # CONFIG_PACKAGE_luci-app-frpc=y
              CONFIG_PACKAGE_luci-app-ipsec-vpnd=m
              CONFIG_PACKAGE_luci-app-mwan3=y
              CONFIG_PACKAGE_luci-app-nlbwmon=y
              CONFIG_PACKAGE_luci-app-pptp-server=m
              CONFIG_PACKAGE_luci-app-ramfree=m
              CONFIG_PACKAGE_luci-app-samba=y
              CONFIG_PACKAGE_luci-app-softethervpn=y
              CONFIG_PACKAGE_luci-app-sqm=m
              CONFIG_PACKAGE_luci-app-ssr-plus=y
              CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
              CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
              CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
              CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
              CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
              CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
              CONFIG_PACKAGE_luci-app-syncdial=y
              CONFIG_PACKAGE_luci-app-qbittorrent=m
              CONFIG_PACKAGE_luci-app-unblockmusic=y
              CONFIG_PACKAGE_luci-app-upnp=y
              CONFIG_PACKAGE_luci-app-v2ray-server=m
              CONFIG_PACKAGE_luci-app-vlmcsd=y
              CONFIG_PACKAGE_luci-app-vsftpd=m
              CONFIG_PACKAGE_luci-app-wol=y
              CONFIG_PACKAGE_luci-app-wrtbwmon=y
              CONFIG_PACKAGE_luci-app-xlnetacc=m
              CONFIG_PACKAGE_luci-app-zerotier=m
              CONFIG_PACKAGE_luci-app-passwall=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ipt2socks=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_socks=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_socks=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_kcptun=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_haproxy=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ChinaDNS_NG=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_dns2socks=y
              CONFIG_PACKAGE_luci-app-passwall_INCLUDE_pdnsd=y
              CONFIG_PACKAGE_luci-app-smartdns=y
            EOF
            # LuCI主题:
            cat >> .config <<EOF
              CONFIG_PACKAGE_luci-theme-argon=y
              CONFIG_PACKAGE_luci-theme-netgear=y
            EOF
            # 常用软件包:
            cat >> .config <<EOF
              CONFIG_PACKAGE_curl=y
            # CONFIG_PACKAGE_htop=y
            # CONFIG_PACKAGE_nano=y
            # CONFIG_PACKAGE_screen=y
            # CONFIG_PACKAGE_tree=y
              CONFIG_PACKAGE_vim-fuller=y
              CONFIG_PACKAGE_wget=y
            EOF
            # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
            # cat >> .config <<EOF
            # # CONFIG_TARGET_IMAGES_PAD is not set
            # # CONFIG_VMDK_IMAGES is not set
            # EOF
            # 
            # ========================固件定制部分结束========================
            # 
            sed -i 's/^[ \t]*//g' ./.config
            echo '修改网关地址'
            sed -i 's/192.168.1.1/192.168.8.254/g' package/base-files/files/bin/config_generate
            make defconfig

      - name: Make download
        run: |
          cd openwrt 
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          cd openwrt 
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1

      - name: Prepare artifact           
        run: find ./openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./openwrt/bin/targets/
